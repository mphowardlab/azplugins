version: 2.1

executors:
  mphoward:
    parameters:
      hoomd-version:
        type: string
    docker:
      - image: mphoward/ci:hoomd<< parameters.hoomd-version >>-ubuntu18.04
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    working_directory: /home/ci/project

commands:
  checkout_with_submodules:
    steps:
      - checkout:
          path: code
      - run:
          name: Update submodules
          working_directory: code
          command: git submodule update --init

  ext_build:
    steps:
      - run:
          name: Configure
          command: |
            mkdir build
            cd build
            cmake ../code -DPYTHON_EXECUTABLE=${PYTHON} -DBUILD_TESTING=on
      - run:
          name: Compile
          command: |
            cd build
            make -j2

  int_build:
    parameters:
      build-mpcd:
        type: boolean
    steps:
      - run:
          name: Link plugin
          command: |
            cd /home/ci/hoomd/hoomd
            ln -s /home/ci/project/code/azplugins azplugins
      - run:
          name: Configure
          command: |
            mkdir build
            cd build
            cmake /home/ci/hoomd -DPYTHON_EXECUTABLE=${PYTHON} -DENABLE_CUDA=off -DENABLE_MPI=off -DSINGLE_PRECISION=off -DENABLE_TBB=off -DBUILD_CGCMM=off -DBUILD_DEM=off -DBUILD_DEPRECATED=off -DBUILD_HPMC=off -DBUILD_JIT=off -DBUILD_METAL=off -DBUILD_MPCD=<< parameters.build-mpcd >> -DBUILD_TESTING=on
      - run:
          name: Compile
          command: |
            cd build
            make -j2

  test:
    steps:
      - run:
          name: Test
          working_directory: build
          no_output_timeout: 1h
          command: |
            ctest --no-compress-output -T test --output-on-failure -R azplugins
      - run:
          name: Copy test results
          command: mkdir test-results && cp build/Testing/**/Test.xml test-results/
      - store_artifacts:
          path: test-results
          destination: test-results
      - store_test_results:
          path: test-results

jobs:
  ext_build:
    parameters:
      hoomd-version:
        type: string
        default: "2.6.0"
      python-version:
        type: string
        default: "3"
      hoomd-config:
        type: string
    executor:
      name: mphoward
      hoomd-version: << parameters.hoomd-version >>
    environment:
      PYTHONPATH: "/home/ci/project/build:/opt/hoomd/python<< parameters.python-version>>/<< parameters.hoomd-config >>"
      PYTHON: "/usr/bin/python<< parameters.python-version >>"
    steps:
      - checkout_with_submodules
      - ext_build

  ext_build_and_test:
    parameters:
      hoomd-version:
        type: string
        default: "2.6.0"
      python-version:
        type: string
        default: "3"
      hoomd-config:
        type: string
    executor:
      name: mphoward
      hoomd-version: << parameters.hoomd-version >>
    environment:
      PYTHONPATH: "/home/ci/project/build:/opt/hoomd/python<< parameters.python-version>>/<< parameters.hoomd-config >>"
      PYTHON: "/usr/bin/python<< parameters.python-version >>"
    steps:
      - checkout_with_submodules
      - ext_build
      - test

  int_build_and_test:
    parameters:
      hoomd-version:
        type: string
        default: "2.6.0"
      python-version:
        type: string
        default: "3"
      build-mpcd:
        type: boolean
        default: on
    executor:
      name: mphoward
      hoomd-version: << parameters.hoomd-version >>
    environment:
      PYTHONPATH: "/home/ci/project/build"
      PYTHON: "/usr/bin/python<< parameters.python-version >>"
    steps:
      - checkout_with_submodules
      - int_build:
          build-mpcd: << parameters.build-mpcd >>
      - test

workflows:
  workflow:
    jobs:
      - ext_build_and_test:
          context: docker-hub-creds
          name: py3-nocuda-nompi-double
          hoomd-config: "nocuda/nompi/double"

      - ext_build_and_test:
          context: docker-hub-creds
          name: py3-nocuda-nompi-single
          hoomd-config: "nocuda/nompi/single"

      - ext_build_and_test:
          context: docker-hub-creds
          name: py3-nocuda-mpi-double
          hoomd-config: "nocuda/mpi/double"

      - ext_build_and_test:
          context: docker-hub-creds
          name: py3-nocuda-mpi-single
          hoomd-config: "nocuda/mpi/single"

      - ext_build:
          context: docker-hub-creds
          name: py3-cuda-nompi-double
          hoomd-config: "cuda/nompi/double"

      - ext_build:
          context: docker-hub-creds
          name: py3-cuda-nompi-single
          hoomd-config: "cuda/nompi/single"

      - ext_build:
          context: docker-hub-creds
          name: py3-cuda-mpi-double
          hoomd-config: "cuda/mpi/double"

      - ext_build:
          context: docker-hub-creds
          name: py3-cuda-mpi-single
          hoomd-config: "cuda/mpi/single"

      - ext_build_and_test:
          name: py2-nocuda-nompi-double
          python-version: "2"
          hoomd-config: "nocuda/nompi/double"

      - int_build_and_test:
          context: docker-hub-creds
          name: py3-internal

      - int_build_and_test:
          context: docker-hub-creds
          name: py2-internal
          python-version: "2"

      - ext_build_and_test:
          context: docker-hub-creds
          name: 2.8.0-nocuda-nompi-double
          hoomd-version: "2.8.0"
          hoomd-config: "nocuda/nompi/double"

      - ext_build_and_test:
          context: docker-hub-creds
          name: 2.8.0-nocuda-nompi-single
          hoomd-version: "2.8.0"
          hoomd-config: "nocuda/nompi/single"

      - ext_build_and_test:
          context: docker-hub-creds
          name: 2.8.0-nocuda-mpi-double
          hoomd-version: "2.8.0"
          hoomd-config: "nocuda/mpi/double"

      - ext_build_and_test:
          context: docker-hub-creds
          name: 2.8.0-nocuda-mpi-single
          hoomd-version: "2.8.0"
          hoomd-config: "nocuda/mpi/single"

      - ext_build:
          context: docker-hub-creds
          name: 2.8.0-cuda-nompi-double
          hoomd-version: "2.8.0"
          hoomd-config: "cuda/nompi/double"

      - ext_build:
          context: docker-hub-creds
          name: 2.8.0-cuda-nompi-single
          hoomd-version: "2.8.0"
          hoomd-config: "cuda/nompi/single"

      - ext_build:
          context: docker-hub-creds
          name: 2.8.0-cuda-mpi-double
          hoomd-version: "2.8.0"
          hoomd-config: "cuda/mpi/double"

      - ext_build:
          context: docker-hub-creds
          name: 2.8.0-cuda-mpi-single
          hoomd-version: "2.8.0"
          hoomd-config: "cuda/mpi/single"

      - int_build_and_test:
          context: docker-hub-creds
          name: 2.8.0-internal
          hoomd-version: "2.8.0"
